[{"content":"本記事は、Windows + Visual Studio 環境で Microsoft 製のパッケージマネージャ『vcpkg』を使い、C++ライブラリを管理する手順の備忘録です。\nvcpkgとは？ vcpkg は Microsoft が提供するオープンソースのC++ライブラリ用パッケージマネージャです。\n依存関係の解決やライブラリ導入が簡単に行えます。\n公式リポジトリ：vcpkg (GitHub)\n前提条件 OS：Windows11 Visual Studio 2022（C++デスクトップ開発） Gitインストール済み 作業手順 vcpkgをクローン ブートストラップ Visual Studioと統合 ライブラリのインストール Visual Studioで動作確認 vcpkgをクローン PowerShellやコマンドプロンプトで以下を実行します。\n1 2 3 cd C:\\Tools git clone https://github.com/microsoft/vcpkg.git cd vcpkg ※パス(C:\\Tools)は任意で変更可能\nブートストラップ vcpkg.exeを作成します。\n1 .\\bootstrap-vcpkg.bat 成功すると vcpkg.exe が生成されます。\nVisual Studioとの統合 Visual Studioでvcpkgのライブラリを自動認識します。\n1 .\\vcpkg integrate install ライブラリのインストール 例として、以下のライブラリをインストールします。\nGLEW GLFW3 GLM Eigen3 1 .\\vcpkg install glew:x64-windows glfw3:x64-windows glm:x64-windows eigen3:x64-windows Visual Studioで動作確認 以下のコードでビルド・実行確認をします。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #include \u0026lt;GL/glew.h\u0026gt; #include \u0026lt;GLFW/glfw3.h\u0026gt; #include \u0026lt;glm/glm.hpp\u0026gt; #include \u0026lt;Eigen/Core\u0026gt; int main() { if (!glfwInit()) return -1; GLFWwindow* window = glfwCreateWindow(640, 480, \u0026#34;vcpkg Test\u0026#34;, nullptr, nullptr); glfwMakeContextCurrent(window); if (glewInit() != GLEW_OK) return -1; glm::vec3 glm_vec(1.0f, 2.0f, 3.0f); Eigen::Vector3f eigen_vec(4.0f, 5.0f, 6.0f); while (!glfwWindowShouldClose(window)) { glfwSwapBuffers(window); glfwPollEvents(); } glfwDestroyWindow(window); glfwTerminate(); return 0; } 参考リンク vcpkg (GitHub) GLEW GLFW GLM Eigen ","date":"2025-05-17T17:00:00+09:00","permalink":"https://t-shinju.github.io/graphics-beginning/p/vcpkg-setup/","title":"vcpkgによるC++ライブラリの導入（Windows + Visual Studio）"}]